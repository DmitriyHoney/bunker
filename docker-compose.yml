version: '3.7'
services:
  backend:
    container_name: ${PROJECT}_backend
    restart: always
    build: ./backend/
    ports:
      - '${BACK_PORT}:8000'
    volumes:
      - './backend:/backend'
    env_file:
      - .env
    networks:
      - nginx-proxy
    depends_on:
      - db
  frontend:
    container_name: ${PROJECT}_frontend
    restart: always
    build: ./frontend
    environment:
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '${FRONT_PORT:-8080}:5173'
    volumes:
      - './frontend:/frontend'
      - /frontend/node_modules
    networks:
      - nginx-proxy
    depends_on:
      - backend
  nginx:
    container_name: ${PROJECT}_nginx
    restart: always
    build: ./nginx
    ports:
      - '${NGINX_PORT}:80'
      - '${NGINX_PORT_S}:443'
    volumes:
      - /etc/nginx
      - './backend/app/static:/backend/app/static'
      - './backend/app/media:/backend/app/media'
    networks:
      - nginx-proxy
    depends_on:
      - backend
      - frontend
  db:
    container_name: ${PROJECT}_db
    restart: always
    image: 'postgres:13-alpine'
    ports:
      - '${DB_PORT}:80'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - nginx-proxy
  pgadmin:
    container_name: ${PROJECT}_pgadmin
    restart: always
    image: 'dpage/pgadmin4'
    ports:
      - '${PGADMIN_PORT}:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - nginx-proxy
volumes:
  pgdata: null
networks:
  nginx-proxy:
    name: nginx-proxy
