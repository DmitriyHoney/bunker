 server {
    listen 80;
    server_name queues;
    charset utf-8;

    location / {
        proxy_pass http://frontend;
        include proxy_params;

        # enable WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /socket.io/ {
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host $host;

     # the port of the nginx in docker compose
     proxy_pass http://backend;

     # enable WebSockets
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
  }

    location /sockjs-node {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://frontend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # location ~ ^/(?<asset_path>static|media)(?<jump>/.*|)$ {
    #     alias /backend/app/$asset_path$jump;
    #     autoindex on;
    # }

    location /static/ {
        autoindex on;
        alias /backend/app/static/;
    }

    location /media/ {
        autoindex on;
        alias /backend/app/media/;
    }

    location ~ ^/(api|admin|docs|redoc|openapi.json)(/.*|)$ {
        proxy_pass http://backend;
        include proxy_params;
    }

    location /ws {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_pass http://backend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
